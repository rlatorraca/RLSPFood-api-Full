# Compilando o APP JAVA com com o maven (dentro da pasta raiz do projeto)
# OLD: $ ./mvnw clean package -Dmaven.test.skip=true

# Compila e cria um image docker, com base Docker Maven incluido no pom.xml (-P : Profile)
$ ./mvnw clean package -Dmaven.test.skip=true -Pdocker


# Rodando o DockerFiledocker
$ docker image build -t rlspfood:1.0 .
$ docker container run --rm -p 8080:8080 rlspfood

# Renomeando uma imagem
$ docker image ls
$ docker image tag <errado> <nova-tag>


# Apagar imagem nao mais usada / com tag errada
$ docker image rm <nome_para_apagar>


# Verficiar as redes docker existentes
$ docker network ls

# Criar uma rede docker
$ docker network create --driver bridge rlspfood-network

** bridge = driver padrao (deixa  rede isolada), mas permite a conexao entre container presentes dentro dessa rede

# Deleta container e volume
$ docker container rm rlsp_mysql --force --volumes

# Criando o MYSQL e colocando dentro da rede da aplicacao (rlspfood-network)
$ docker container run -d -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=yes --network rlspfood-network --name rlspfood-mysql mysql:8.0


# Acessando o LOG do MYSQL
$ docker container logs <numero_container>

# Rodando a aplicacao usando ${DB_HOSTNAME}
#### $ docker container run --rm -p 8080:8080 -e DB_HOSTNAME=rlspfood-mysql --network rlspfood-network rlspfood-api
$ docker container run --rm -p 8080:8080 -e DB_HOST=rlspfood-mysql -e DB_PORT=3306 --network rlspfood-network rlspfood:1.0

# Conectar no MYSQL, para fazer alteracoes de permissoes
# Pois, o o usuário root está configurado apenas para conexões a partir de localhost ('root'@'localhost').
# Você pode mudar esse comportamento rodando os comandos abaixo pra permitir conexões de qualquer host:
$ docker exec -it <container-id> bas
$ mysql -h localhost -u root -p root

FLUSH PRIVILEGES;
GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost';
FLUSH PRIVILEGES;
UPDATE mysql.user SET host='%' WHERE user='root';

SET PASSWORD FOR 'root'@'localhost' = 'mypass';


##
## Publicando no dockerhub
## $ docker tag local-image:tagname new-repo:tagname
   $ docker push new-repo:tagname
##
$ docker image tag rlspfood:1.0 rlatorraca/rlspfood-api:1.0
$ docker push rlspfood:1.0
$ docker container run --rm -p 8080:8080 -e DB_HOST=rlspfood-mysql -e DB_PORT=3306 --network rlspfood-network rlatorraca/rlspfood-api:1.0


##
## Rodar um container acessano a rede que esta a aplicacao e o redis
$ docker run --rm -it --network rlspfood-api-full_rlspfood-network redis:6.2.6-alpine sh
# ping rlspfood-redis
# redis-cli -h rlspfood-redis -p 6379 (conecta no redis da aplicacao criado no Dockerfile)
# keys * (olha as chaves existentes)
# set name Rodrigo (insere a chave 'name:Rodrigo'
# get name (mostra o que tem na chave)
# del name (deleta a chave nome)


## Verifica se ja esta aplicada a mudanca para a vulnerabilidade do Log4j
$ ./mvnw dependency:list | grep log4j
